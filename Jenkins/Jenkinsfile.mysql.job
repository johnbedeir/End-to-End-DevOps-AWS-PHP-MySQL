pipeline {
    agent any

    environment {
        REPOSITORY_URI = "${env.MYSQL_JOB_REPOSITORY_URI}"
        IMAGE_TAG = "${env.TAG}"
        AWS_REGION = "${env.REGION}"
        DOCKERFILE_PATH = "${env.MYSQL_JOB_DOCKERFILE_PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Login to AWS ECR') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials']]) {
                    sh 'aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -f $DOCKERFILE_PATH/mysql.Dockerfile -t $REPOSITORY_URI:$IMAGE_TAG $DOCKERFILE_PATH/'
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials']]) {
                    sh 'docker push $REPOSITORY_URI:$IMAGE_TAG'
                }
            }
        }
    }

    post {
        always {
            sh 'docker rmi $REPOSITORY_URI:$IMAGE_TAG'
        }
    }
}
